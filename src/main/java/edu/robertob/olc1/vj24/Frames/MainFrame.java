/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.robertob.olc1.vj24.Frames;

import edu.robertob.olc1.vj24.Data.CurrentSession;
import edu.robertob.olc1.vj24.Data.JCFile;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

/**
 *
 * @author robertob
 */
public class MainFrame extends javax.swing.JFrame {

    CurrentSession currentSession = new CurrentSession();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        // testing
        jToolBar2.setFloatable(false);
        jToolBar2.setLayout(new FlowLayout(FlowLayout.LEADING, 10, 5));

//        jTabbedPane1.add("Tab 1", new JTextArea("testing 1"));
//        jTabbedPane1.setTabComponentAt(0, new ButtonTabComponent(jTabbedPane1));
//        jTabbedPane1.add("Tab 2", new JLabel("Tab 2"));
//        jTabbedPane1.setTabComponentAt(1, new ButtonTabComponent(jTabbedPane1));
//        jTabbedPane1.add("Tab 3", new JLabel("Tab 3"));
//        jTabbedPane1.setTabComponentAt(2, new ButtonTabComponent(jTabbedPane1));
//        jTabbedPane1.setTabLayoutPolicy(JTabbedPane.WRAP_TAB_LAYOUT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar2 = new javax.swing.JToolBar();
        newFileBtn = new javax.swing.JButton();
        openFileBtn = new javax.swing.JButton();
        saveFileBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        runCodeBtn = new javax.swing.JButton();
        fileStatusLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(252, 252, 252));

        jToolBar2.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar2.setBorderPainted(false);
        jToolBar2.setEnabled(false);

        newFileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/file-plus.png"))); // NOI18N
        newFileBtn.setFocusable(false);
        newFileBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newFileBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileBtnActionPerformed(evt);
            }
        });
        jToolBar2.add(newFileBtn);

        openFileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/file-import.png"))); // NOI18N
        openFileBtn.setFocusable(false);
        openFileBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openFileBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        openFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileBtnActionPerformed(evt);
            }
        });
        jToolBar2.add(openFileBtn);

        saveFileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/download.png"))); // NOI18N
        saveFileBtn.setFocusable(false);
        saveFileBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveFileBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileBtnActionPerformed(evt);
            }
        });
        jToolBar2.add(saveFileBtn);

        jSeparator2.setBackground(new java.awt.Color(204, 204, 204));
        jSeparator2.setForeground(new java.awt.Color(0, 102, 255));
        jSeparator2.setOpaque(true);
        jSeparator2.setSeparatorSize(new java.awt.Dimension(1, 30));
        jToolBar2.add(jSeparator2);

        runCodeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-play.png"))); // NOI18N
        runCodeBtn.setFocusable(false);
        runCodeBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        runCodeBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(runCodeBtn);
        jToolBar2.add(fileStatusLabel);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
        );

        jMenuBar1.setBackground(new java.awt.Color(252, 252, 252));
        jMenuBar1.setBorder(null);
        jMenuBar1.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        jMenu1.setText("Archivo");

        jMenu2.setText("jMenu2");
        jMenu1.add(jMenu2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 883, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newFileBtnActionPerformed

    private void openFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileBtnActionPerformed
        var fileChooser = new JFileChooser();
        var result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            System.out.println("You chose to open this file: " + fileChooser.getSelectedFile().getName());
            var file = fileChooser.getSelectedFile();
            var path = file.getAbsolutePath();
            var name = file.getName();
            var content = "";
            var sessionFile = new JCFile(name, path, content, true, jTabbedPane1.getTabCount());

            for (int i = 0; i < currentSession.getFiles().size(); i++) {
                if (currentSession.getFiles().get(i) != null && currentSession.getFiles().get(i).getSystemPath().equals(path)) {
                    JOptionPane.showMessageDialog(this, "El archivo ya estÃ¡ abierto", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            currentSession.addFile(sessionFile);

            try {
                var reader = new BufferedReader(new FileReader(path));
                var line = reader.readLine();
                while (line != null) {
                    content += line + "\n";
                    line = reader.readLine();
                }
                reader.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
            var textArea = new JTextArea(content);
            var scrollPane = new JScrollPane(textArea, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);

            jTabbedPane1.add(name, scrollPane);
            jTabbedPane1.setTabComponentAt(jTabbedPane1.getTabCount() - 1, new ButtonTabComponent(jTabbedPane1, currentSession));

            textArea.getDocument().addDocumentListener(new DocumentListener() {
                @Override
                public void insertUpdate(DocumentEvent e) {
                    sessionFile.setContent(textArea.getText());

                    if (sessionFile.isSaved()) {
                        sessionFile.setSaved(false);
                        MainFrame.this.fileStatusLabel.setText("Modificado");
                        //set bold font to the label in the tab
                        MainFrame.this.fileStatusLabel.setFont(MainFrame.this.fileStatusLabel.getFont().deriveFont(Font.BOLD));
                    }
                }

                @Override
                public void removeUpdate(DocumentEvent e) {
                    sessionFile.setContent(textArea.getText());

                    if (sessionFile.isSaved()) {
                        sessionFile.setSaved(false);
                        MainFrame.this.fileStatusLabel.setText("Modificado");
                        MainFrame.this.fileStatusLabel.setFont(MainFrame.this.fileStatusLabel.getFont().deriveFont(Font.BOLD));
                    }
                }

                @Override
                public void changedUpdate(DocumentEvent e) {
                    sessionFile.setContent(textArea.getText());

                  if (sessionFile.isSaved()) {
                      sessionFile.setSaved(false);
                        MainFrame.this.fileStatusLabel.setText("Modificado");
                      MainFrame.this.fileStatusLabel.setFont(MainFrame.this.fileStatusLabel.getFont().deriveFont(Font.BOLD));
                  }
                }
            });
        }


    }//GEN-LAST:event_openFileBtnActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // change the active file
        var index = jTabbedPane1.getSelectedIndex();
        if (index == -1) {
            return;
        }
        currentSession.setActiveFile(jTabbedPane1.getSelectedIndex());
        var status = currentSession.getActiveFile().isSaved() ? "Guardado" : "Modificado";
        fileStatusLabel.setText(status);
        if (status.equals("Modificado")) {
            fileStatusLabel.setFont(fileStatusLabel.getFont().deriveFont(Font.BOLD));
        } else {
            fileStatusLabel.setFont(fileStatusLabel.getFont().deriveFont(Font.PLAIN));
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void saveFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileBtnActionPerformed
        var activeFile = currentSession.getActiveFile();
        if (activeFile != null) {
            activeFile.setSaved(true);
            activeFile.saveFile(activeFile.getContent());
            fileStatusLabel.setText("Guardado");
            fileStatusLabel.setFont(fileStatusLabel.getFont().deriveFont(Font.PLAIN));
        }
    }//GEN-LAST:event_saveFileBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fileStatusLabel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JButton newFileBtn;
    private javax.swing.JButton openFileBtn;
    private javax.swing.JButton runCodeBtn;
    private javax.swing.JButton saveFileBtn;
    // End of variables declaration//GEN-END:variables
}
